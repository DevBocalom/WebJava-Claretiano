/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.5
 * Generated at: 2025-04-22 18:08:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import dao.UsuarioDAO;
import model.Usuario;

public final class usuarioscadastro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("dao.UsuarioDAO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Usuario");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\">\r\n");
      out.write("<title>Cadastro de Usuários</title>\r\n");
      out.write("<script>\r\n");
      out.write("	function editarUsuario(id, nome, email, senha, telefone, status) {\r\n");
      out.write("		document.getElementById(\"id\").value = id;\r\n");
      out.write("		document.getElementById(\"nome\").value = nome;\r\n");
      out.write("		document.getElementById(\"email\").value = email;\r\n");
      out.write("		document.getElementById(\"senha\").value = senha;\r\n");
      out.write("		document.getElementById(\"telefone\").value = telefone;\r\n");
      out.write("		document.getElementById(\"status\").checked = status === \"true\";\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h2>Cadastro de Usuário</h2>\r\n");
      out.write("	<form action=\"UsuarioControl\" method=\"post\">\r\n");
      out.write("		<input type=\"hidden\" id=\"id\" name=\"id\"> \r\n");
      out.write("		<label>Nome:</label> \r\n");
      out.write("		<input type=\"text\" id=\"nome\" name=\"nome\" required><br> \r\n");
      out.write("		<label>Email:</label>\r\n");
      out.write("		<input type=\"email\" id=\"email\" name=\"email\" required><br>\r\n");
      out.write("		<label>Senha:</label> \r\n");
      out.write("		<input type=\"password\" id=\"senha\" name=\"senha\" required><br> \r\n");
      out.write("		<label>Telefone:</label> \r\n");
      out.write("		<input type=\"text\" id=\"telefone\" name=\"telefone\" required><br>\r\n");
      out.write("		<label>Status:</label> \r\n");
      out.write("		<input type=\"checkbox\" id=\"status\" name=\"status\"><br> \r\n");
      out.write("		<input type=\"submit\" value=\"Salvar\">\r\n");
      out.write("	</form>\r\n");
      out.write("	<br />\r\n");
      out.write("	<div id=\"container\">\r\n");
      out.write("		<h2>Cadastro de Usuários</h2>\r\n");
      out.write("		<br /> <a href=\"HomeController?action=home\">Voltar para Home</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<br />\r\n");
      out.write("	<h2>Usuários Cadastrados</h2>\r\n");
      out.write("\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>ID</th>\r\n");
      out.write("			<th>Nome</th>\r\n");
      out.write("			<th>Email</th>\r\n");
      out.write("			<th>Telefone</th>\r\n");
      out.write("			<th>Status</th>\r\n");
      out.write("			<th>Ações</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("		");

		UsuarioDAO usuarioDAO = new UsuarioDAO();
		List<Usuario> usuarios = usuarioDAO.selectAllUsuarios();
		for (Usuario usuario : usuarios) {
		
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>");
      out.print(usuario.getId());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(usuario.getNome());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(usuario.getEmail());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(usuario.getTelefone());
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(usuario.isStatus() ? "Ativo" : "Inativo");
      out.write("</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<button\r\n");
      out.write("					onclick=\"editarUsuario('");
      out.print(usuario.getId());
      out.write("', '");
      out.print(usuario.getNome());
      out.write("', \r\n");
      out.write("            '");
      out.print(usuario.getEmail());
      out.write("', '");
      out.print(usuario.getSenha());
      out.write("', '");
      out.print(usuario.getTelefone());
      out.write("', \r\n");
      out.write("            '");
      out.print(usuario.isStatus());
      out.write("')\">Editar</button>\r\n");
      out.write("				<a href=\"UsuarioControl?action=delete&id=");
      out.print(usuario.getId());
      out.write("\">Excluir</a>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
